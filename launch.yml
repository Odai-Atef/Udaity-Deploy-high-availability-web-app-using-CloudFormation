Parameters:
 
 EnviromentName:
  Type: String
  Default: UdacityProjectII
  Description: This is enviroment name
  
 Ec2TypeID:
  Type: String
  Default: t2.micro
  Description: Type of image

 EC2ImageID:
  Type: String
  Default: ami-0ba60995c1589da9d
  Description: Ec2 launch Image ID 

 VPCCIDR:
  Description: VPC IP range CIDR
  Type: String
  Default: 10.192.0.0/16
 
 PrivateSubnetICIDR:
  Description: IP range CIDR for first private subnet
  Type: String
  Default: 10.192.20.0/24
 
 PrivateSubnetIICIDR:
  Description: IP range CIDR for second private subnet
  Type: String
  Default: 10.192.21.0/24


# whatever you consider a changing value, put it as a parameter instead of hard-coding it into your script
Resources:
  VPC:
   Type: AWS::EC2::VPC
   Properties:
    CidrBlock: !Ref VPCCIDR
    EnableDnsSupport: true
    EnableDnsHostnames: true
    Tags:
     - Key: name
       Value: !Ref EnviromentName
  
  PrivateSubnetI:
   Type: AWS::EC2::Subnet
   Properties:
    VpcId: !Ref VPC
    AvailabilityZone: !Select [ 0, !GetAZs  '' ]
    MapPublicIpOnLaunch: false
    CidrBlock: !Ref PrivateSubnetICIDR
    Tags:
     - Key: name
       Value: !Ref EnviromentName
     - Key: Description
       Value: PrivateSubnetI

  PrivateSubnetII:
   Type: AWS::EC2::Subnet
   Properties:
    VpcId: !Ref VPC
    AvailabilityZone: !Select [ 1, !GetAZs  '' ]
    MapPublicIpOnLaunch: false
    CidrBlock: !Ref PrivateSubnetIICIDR
    Tags:
     - Key: name
       Value: !Ref EnviromentName
     - Key: Description
       Value: PrivateSubnetII

  EC2SecurityGroup:
   Type: AWS::EC2::SecurityGroup
   Properties:
    VpcId: !Ref VPC
    GroupDescription: Security Group for instances
    SecurityGroupEgress: 
     - CidrIp: 0.0.0.0/0
       IpProtocol: tcp
       ToPort: 80
       FromPort: 80
       Description: Web Access


     - CidrIp: 0.0.0.0/0
       IpProtocol: tcp
       ToPort: 22
       FromPort: 22
       Description: SSH access


    SecurityGroupIngress:
     - CidrIp: 0.0.0.0/0
       IpProtocol: tcp
       FromPort: 80
       ToPort: 80
       Description: Web Access

     - CidrIp: 0.0.0.0/0
       IpProtocol: tcp
       FromPort: 22
       ToPort: 22
       Description: SSH access
    Tags:
     - Key: name
       Value: !Ref EnviromentName

  Ec2InstanceI:
   Type: AWS::EC2::Instance
   Properties:
    Tags:
     - Key: name
       Value: !Ref EnviromentName
    ImageId: !Ref EC2ImageID
    InstanceType: !Ref Ec2TypeID
    KeyName: EC2
    NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet:
         - Ref: EC2SecurityGroup
        SubnetId:
         Ref: PrivateSubnetI

    BlockDeviceMappings: 
      - DeviceName: "/dev/sdm"
        Ebs: 
         VolumeType: "io1"
         Iops: "200"
         DeleteOnTermination: "false"
         VolumeSize: "20"  

  Ec2InstanceII:
   Type: AWS::EC2::Instance
   Properties:
    Tags:
     - Key: name
       Value: !Ref EnviromentName
    ImageId: !Ref EC2ImageID
    InstanceType: !Ref Ec2TypeID
    KeyName: EC2
    NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet:
         - Ref: EC2SecurityGroup
        SubnetId:
         Ref: PrivateSubnetI

    BlockDeviceMappings: 
      - DeviceName: "/dev/sdm"
        Ebs: 
         VolumeType: "io1"
         Iops: "200"
         DeleteOnTermination: "false"
         VolumeSize: "20"      

  Ec2InstanceIII:
   Type: AWS::EC2::Instance
   Properties:
    Tags:
     - Key: name
       Value: !Ref EnviromentName
    ImageId: !Ref EC2ImageID
    InstanceType: !Ref Ec2TypeID
    KeyName: EC2
    NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet:
         - Ref: EC2SecurityGroup
        SubnetId:
         Ref: PrivateSubnetII

    BlockDeviceMappings: 
      - DeviceName: "/dev/sdm"
        Ebs: 
         VolumeType: "io1"
         Iops: "200"
         DeleteOnTermination: "false"
         VolumeSize: "20"      

  Ec2InstanceIV:
   Type: AWS::EC2::Instance
   Properties:
    Tags:
     - Key: name
       Value: !Ref EnviromentName
    ImageId: !Ref EC2ImageID
    InstanceType: !Ref Ec2TypeID
    KeyName: EC2
    NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet:
         - Ref: EC2SecurityGroup
        SubnetId:
         Ref: PrivateSubnetII

    BlockDeviceMappings: 
      - DeviceName: "/dev/sdm"
        Ebs: 
         VolumeType: "io1"
         Iops: "200"
         DeleteOnTermination: "false"
         VolumeSize: "20"      




